apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-api-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: user-api
  template:
    metadata:
      labels:
        app: user-api
    spec:
      containers:
      - name: user-api
        image: userapi:latest
        ports:
          - containerPort: 8080
          - containerPort: 8081
        env:
          - name: ASPNETCORE_ENVIRONMENT
            value: "Development"
          - name: ASPNETCORE_URLS
            value: "http://+:8080;https://+:8081"
          - name: DATABASE_PATH
            value: "/app/db/user.db"
          - name: RabbitMQ__HostName
            value: "rabbitmq"
          - name: RabbitMQ__UserName
            value: "guest"
          - name: RabbitMQ__Password
            value: "guest"
        volumeMounts:
          - name: db-volume
            mountPath: /app/Database
          - name: user-secrets-volume
            mountPath: /home/app/.microsoft/usersecrets
            readOnly: true
          - name: https-volume
            mountPath: /home/app/.aspnet/https
            readOnly: true
      volumes:
        - name: db-volume
          hostPath:
            path: "D:/WorksGit/backend-app/Database"
        - name: user-secrets-volume
          hostPath:
            path: "${APPDATA}/Microsoft/UserSecrets"
        - name: https-volume
          hostPath:
            path: "${APPDATA}/ASP.NET/Https"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: yarpgateway-api-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: yarpgateway-api
  template:
    metadata:
      labels:
        app: yarpgateway-api
    spec:
      containers:
      - name: yarpgateway-api
        image: yarpgatewayapi:latest
        ports:
          - containerPort: 8084
          - containerPort: 8085
        env:
          - name: ASPNETCORE_ENVIRONMENT
            value: "Development"
          - name: ASPNETCORE_URLS
            value: "http://+:8084;https://+:8085"
        volumeMounts:
          - name: user-secrets-volume
            mountPath: /home/app/.microsoft/usersecrets
            readOnly: true
          - name: https-volume
            mountPath: /home/app/.aspnet/https
            readOnly: true
      volumes:
        - name: user-secrets-volume
          hostPath:
            path: "${APPDATA}/Microsoft/UserSecrets"
        - name: https-volume
          hostPath:
            path: "${APPDATA}/ASP.NET/Https"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: logmessagebroker-api-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: logmessagebroker-api
  template:
    metadata:
      labels:
        app: logmessagebroker-api
    spec:
      containers:
      - name: logmessagebroker-api
        image: logmessagebrokerapi:latest
        ports:
          - containerPort: 5060
          - containerPort: 5061
        env:
          - name: ASPNETCORE_ENVIRONMENT
            value: "Development"
          - name: ASPNETCORE_URLS
            value: "http://+:5060;https://+:5061"
        volumeMounts:
          - name: user-secrets-volume
            mountPath: /home/app/.microsoft/usersecrets
            readOnly: true
          - name: https-volume
            mountPath: /home/app/.aspnet/https
            readOnly: true
      volumes:
        - name: user-secrets-volume
          hostPath:
            path: "${APPDATA}/Microsoft/UserSecrets"
        - name: https-volume
          hostPath:
            path: "${APPDATA}/ASP.NET/Https"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      containers:
      - name: rabbitmq
        image: rabbitmq:management
        ports:
          - containerPort: 5672
          - containerPort: 15672
        env:
          - name: RABBITMQ_DEFAULT_USER
            value: "guest"
          - name: RABBITMQ_DEFAULT_PASS
            value: "guest"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
      - name: mongodb
        image: mongo:latest
        ports:
          - containerPort: 27017
        env:
          - name: MONGO_INITDB_ROOT_USERNAME
            value: "root"
          - name: MONGO_INITDB_ROOT_PASSWORD
            value: "password"
        volumeMounts:
          - name: mongodb-data
            mountPath: /data/db
      volumes:
        - name: mongodb-data
          persistentVolumeClaim:
            claimName: mongodb-pvc
