apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-api-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: user-api
  template:
    metadata:
      labels:
        app: user-api
    spec:
      containers:
      - name: user-api
        image: userapi:latest
        imagePullPolicy: Never
        ports:
          - containerPort: 8080
        env:
          - name: ASPNETCORE_ENVIRONMENT
            value: "Development"
          - name: ASPNETCORE_URLS
            value: "http://+:8080"
          - name: DATABASE_PATH
            value: "/app/db/user.db"
          - name: RabbitMQ__HostName
            value: "rabbitmq"
          - name: RabbitMQ__UserName
            value: "guest"
          - name: RabbitMQ__Password
            value: "guest"
        resources:
          requests:
            memory: "256Mi"
            cpu: "500m"
          limits:
            memory: "512Mi"
            cpu: "1"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: yarpgateway-api-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: yarpgateway-api
  template:
    metadata:
      labels:
        app: yarpgateway-api
    spec:
      containers:
      - name: yarpgateway-api
        image: yarpgatewayapi:latest
        imagePullPolicy: Never
        ports:
          - containerPort: 8084
        env:
          - name: ASPNETCORE_ENVIRONMENT
            value: "Development"
          - name: ASPNETCORE_URLS
            value: "http://+:8084"
        resources:
          requests:
            memory: "256Mi"
            cpu: "500m"
          limits:
            memory: "512Mi"
            cpu: "1"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: logmessagebroker-api-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: logmessagebroker-api
  template:
    metadata:
      labels:
        app: logmessagebroker-api
    spec:
      containers:
      - name: logmessagebroker-api
        image: logmessagebrokerapi:latest
        imagePullPolicy: Never
        ports:
          - containerPort: 5060
        env:
          - name: ASPNETCORE_ENVIRONMENT
            value: "Development"
          - name: ASPNETCORE_URLS
            value: "http://+:5060"
        resources:
          requests:
            memory: "256Mi"
            cpu: "500m"
          limits:
            memory: "512Mi"
            cpu: "1"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      containers:
      - name: rabbitmq
        image: rabbitmq:management
        ports:
          - containerPort: 5672
          - containerPort: 15672
        env:
          - name: RABBITMQ_DEFAULT_USER
            value: "guest"
          - name: RABBITMQ_DEFAULT_PASS
            value: "guest"
        resources:
          requests:
            memory: "256Mi"
            cpu: "500m"
          limits:
            memory: "512Mi"
            cpu: "1"
---
# MongoDB Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
      - name: mongodb
        image: mongo:latest
        ports:
          - containerPort: 27017
        env:
          - name: MONGO_INITDB_ROOT_USERNAME
            value: "root"
          - name: MONGO_INITDB_ROOT_PASSWORD
            value: "password"
        volumeMounts:
          - name: mongodb-data
            mountPath: /data/db  # Inside the container where MongoDB will store its data
        resources:
          requests:
            memory: "256Mi"
            cpu: "500m"
          limits:
            memory: "512Mi"
            cpu: "1"
      volumes:
        - name: mongodb-data
          persistentVolumeClaim:
            claimName: mongodb-pvc  # Use the PVC defined above